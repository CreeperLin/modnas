hpspace:
  hp_path: 
  hp_dict:
    augment.estimator.train.w_optim.args.lr: [0.01, 0.1, 1.0]
    # augment.estimator.train.epochs: [1, 2, 3]
hptuner:
  type: 'Random'
log:
  writer: False
device:
  gpus: 'all'
  seed: 2
hptune:
  estimator:
    tune:
      type: 'HPTune'
      batch_size: 1
      epochs: 10
      trial_args:
        proc: 'augment'
        name: 'trial'
        chkpt:
        device: 'all'
        exp: 'exp'
      trial_config:
        augment:
          data:
            type: 'CIFAR10'
            # type: 'MNIST'
            # type: 'ImageNet'
            train_root: './data'
            valid_root: './data'
            dloader:
              type: 'pytorch'
              split_ratio: 0
              trn_batch_size: 64
              val_batch_size: 64
              workers: 2
              cutout: 0
              jitter: False
          estimator:
            train:
              type: 'Default'
              epochs: 1
              w_optim:
                type: 'sgd'
                args:
                  lr: 0.1
                  momentum: 0.9
                  weight_decay: 0.0005
                  nesterov: False
              lr_scheduler:
                type: 'cosine'
                args:
                  eta_min: 0.0
              aux_weight: 0.0
              drop_path_prob: 0.0
              w_grad_clip: 0.0
              print_freq: 200
              save_freq: 0
        ops:
          ops_order: 'weight_bn'
          affine: False
        criterion:
          type: 'LS'
          eta: 0.1
        model:
          type: 'TestNet'
          args:
            n_classes: 10             # use 10 for MNIST, CIFAR10
            chn_in: 3   
            chn: 16
        log:
          writer: False
        device:
          gpus: 'all'
          seed: 2
        genotypes:
          gt_str: ''
          gt_path: ''
        init:
          type: 'he_normal_fout'